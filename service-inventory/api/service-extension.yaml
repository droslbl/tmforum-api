openapi: 3.0.3
info:
  title: Service Inventory Extension
  description: '## TMF API Reference: TMF 638 - Service Inventory Management Extension


    This extension adds the lastUpdate field to Service entities to track modification timestamps.'
  version: 4.0.0
tags:
- name: service
paths: {}
components:
  schemas:
    Any: {}
    Characteristic:
      type: object
      description: Describes a given characteristic of an object or entity through a name/value pair.
      required:
      - name
      - value
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        value:
          $ref: '#/components/schemas/Any'
          description: The value of the characteristic
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    CharacteristicRelationship:
      type: object
      description: Another Characteristic that is related to the current Characteristic;
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        relationshipType:
          type: string
          description: The type of relationship
    ConstraintRef:
      type: object
      description: Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.
      properties:
        id:
          type: string
          description: reference id to the target constraint
        href:
          type: string
          format: uri
          description: Hyperlink reference to the target constraint
        name:
          type: string
          description: Name given to the constraint
        version:
          type: string
          description: constraint version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The (class) type of the referred constraint
      required:
      - id
    Feature:
      type: object
      description: Configuration feature.
      required:
      - featureCharacteristic
      - name
      - id
      properties:
        id:
          type: string
          description: Unique identifier of the feature.
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
        constraint:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintRef'
          description: This is a list of feature constraints.
        featureCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          minItems: 1
          description: This is a list of Characteristics for a particular feature.
        featureRelationship:
          type: array
          items:
            $ref: '#/components/schemas/FeatureRelationship'
    FeatureRelationship:
      type: object
      description: Configuration feature
      required:
      - name
      - relationshipType
      properties:
        id:
          type: string
          description: Unique identifier of the target feature.
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: The period for which this feature relationship is valid.
    Note:
      type: object
      description: Extra information about a given entity
      required:
      - date
      - author
      - text
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity (may or may not be globally unique, depending on
            provider implementation)
        author:
          type: string
          description: Author of the note
        date:
          type: string
          format: date-time
          description: Date of the note
        text:
          type: string
          description: Text of the note
    OrderItemActionType:
      type: string
      description: action to be performed on the product
      enum:
      - add
      - modify
      - delete
      - noChange
    RelatedEntityRefOrValue:
      type: object
      description: A reference to an entity, where the type of the entity is not known in advance. A related entity defines
        a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation
        & @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself
      required:
      - role
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    RelatedParty:
      type: object
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
      required:
      - '@referredType'
      - id
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          format: uri
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    RelatedPlaceRefOrValue:
      type: object
      description: Related Entity reference. A related place defines a place described by reference or by value linked to
        a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity
        and not the RelatedPlaceRefOrValue class itself
      required:
      - role
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    RelatedServiceOrderItem:
      type: object
      description: RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination.
      required:
      - itemId
      - serviceOrderId
      properties:
        itemId:
          type: string
          description: Identifier of the order item where the service was managed
        role:
          type: string
          description: role of the service order item for this service
        serviceOrderHref:
          type: string
          description: Reference of the related entity.
        serviceOrderId:
          type: string
          description: Unique identifier of a related entity.
        itemAction:
          $ref: '#/components/schemas/OrderItemActionType'
          description: Action of the order item for this service
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ResourceRef:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          format: uri
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ServiceRefOrValue:
      type: object
      description: A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself
      required:
      - id
      properties:
        id:
          type: string
          description: Unique identifier of the service
        href:
          type: string
          description: Reference of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is
            a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE
            and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown;
            1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider
            of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical
            place whre the service is installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role
            linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in
            the inventory.
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
          description: The specification from which this service was instantiated
        state:
          $ref: '#/components/schemas/ServiceStateType'
          description: The life cycle state of the service, such as designed, reserved, active, etc...
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated
            with Resources'
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service
            (bundling, link CFS to RFS)
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ServiceRelationship:
      type: object
      required:
      - relationshipType
      - service
      properties:
        relationshipType:
          type: string
        service:
          $ref: '#/components/schemas/ServiceRefOrValue'
        serviceRelationshipCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
    ServiceSpecificationRef:
      type: object
      description: 'Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.'
      required:
      - id
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          format: uri
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Service specification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ServiceStateType:
      type: string
      description: Valid values for the lifecycle state of the service
      enum:
      - feasibilityChecked
      - designed
      - reserved
      - inactive
      - active
      - terminated
    TimePeriod:
      type: object
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
      properties:
        endDateTime:
          example: '1985-04-12T23:20:50.52Z'
          type: string
          format: date-time
          description: End of the time period, using IETC-RFC-3339 format
        startDateTime:
          example: '1985-04-12T23:20:50.52Z'
          type: string
          format: date-time
          description: Start of the time period, using IETC-RFC-3339 format
    Service:
      type: object
      description: 'Service is a base class for defining the Service hierarchy. All Services are characterized as either being
        possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.'
      properties:
        id:
          type: string
          description: Unique identifier of the service
        href:
          type: string
          description: Reference of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        lastUpdate:
          type: string
          format: date-time
          description: Date and time of the last update
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is
            a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE
            and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown;
            1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider
            of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical
            place whre the service is installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role
            linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in
            the inventory.
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
          description: The specification from which this service was instantiated
        state:
          $ref: '#/components/schemas/ServiceStateType'
          description: The life cycle state of the service, such as designed, reserved, active, etc...
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated
            with Resources'
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service
            (bundling, link CFS to RFS)
    Service_Create:
      type: object
      description: 'Service is a base class for defining the Service hierarchy. All Services are characterized as either being
        possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.

        Skipped properties: id,href,lastUpdate'
      required:
      - state
      - serviceSpecification
      properties:
        category:
          type: string
          description: Is it a customer facing or resource facing service
        lastUpdate:
          type: string
          format: date-time
          description: Date and time of the last update
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is
            a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE
            and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown;
            1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider
            of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical
            place whre the service is installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role
            linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in
            the inventory.
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
          description: The specification from which this service was instantiated
        state:
          $ref: '#/components/schemas/ServiceStateType'
          description: The life cycle state of the service, such as designed, reserved, active, etc...
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated
            with Resources'
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service
            (bundling, link CFS to RFS)
    Service_Update:
      type: object
      description: 'Service is a base class for defining the Service hierarchy. All Services are characterized as either being
        possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.

        Skipped properties: id,href,lastUpdate,serviceDate'
      properties:
        category:
          type: string
          description: Is it a customer facing or resource facing service
        lastUpdate:
          type: string
          format: date-time
          description: Date and time of the last update
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is
            a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE
            and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown;
            1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider
            of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical
            place whre the service is installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role
            linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in
            the inventory.
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
          description: The specification from which this service was instantiated
        state:
          $ref: '#/components/schemas/ServiceStateType'
          description: The life cycle state of the service, such as designed, reserved, active, etc...
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated
            with Resources'
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service
            (bundling, link CFS to RFS)
